#include <bits/stdc++.h>

#pragma GCC optimize("-Ofast")
//#pragma GCC optimize("trapv")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,sse4.2,popcnt,abm,mmx,avx2,tune=native")
#pragma GCC optimize("-ffast-math")
#pragma GCC optimize("-funroll-loops")

#define I inline void
#define S struct
#define vi vector<int>
#define vii vector<pair<int, int>>
#define pii pair<int, int>
#define pll pair<ll, ll>

using namespace std;
using ll = long long;
using ld = long double;

const int N = 2e5 + 7, mod = 1e9 + 7;
const ll inf = 2e18;

// How interesting!

int n;
int a[N];
vector<int> com;
map<int, int> nw;
int L[N], R[N];
int bit[N];

void upd(int x)
{
        for (; x < N; x += x & -x)
                bit[x]++;
}
int get(int x)
{
        int ret = 0;
        for (; x; x -= x & -x)
                ret += bit[x];
        return ret;
}
int main()
{
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        freopen("bphoto.in", "r", stdin);
        freopen("bphoto.out", "w", stdout);
        cin >> n;
        for (int i = 0; i < n; ++i)
        {
                cin >> a[i];
                com.push_back(a[i]);
        }
        sort(com.begin(), com.end());
        com.erase(unique(com.begin(), com.end()), com.end());
        for (int i = 0; i < (int)com.size(); ++i)
                nw[com[i]] = i + 1;
        for (int i = 0; i < n; ++i)
                a[i] = nw[a[i]];
        for (int i = 0; i < n; ++i)
        {
                L[i] = get(N) - get(a[i]);
                upd(a[i]);
        }
        memset(bit, 0, sizeof bit);
        for (int i = n - 1; ~i; --i)
        {
                R[i] = get(N) - get(a[i]);
                upd(a[i]);
        }
        int ans = 0;
        for (int i = 0; i < n; ++i)
        {
                ans += (max(L[i], R[i]) > 2 * min(L[i], R[i]));
        }
        cout << ans;
        return 0;
}

/*
        - bounds sir (segtree = 4N, eulerTour = 2N, ...)
        - a variable defined twice?
        - will overflow?
        - is it a good complexity?
        - don't mess up indices (0-indexed vs 1-indexed)
        - reset everything between testcases. 
*/
