#include <bits/stdc++.h>

#define I inline void
#define S struct
#define vi vector<int>
#define vii vector<pair<int, int>>
#define pii pair<int, int>
#define pll pair<ll, ll>

using namespace std;
using ll = long long;
using ld = long double;

const int N = 2e5 + 7, mod = 1e9 + 7;
const ll inf = 2e18;

// How interesting!

int n;
int a[N], b[N];
ll pws[N];
int bit[N];
vector<pii> vec;
ll add(ll x, ll y) { return (x + y) >= mod ? x + y - mod : x + y; }

void upd(int x)
{
        for (; x < N; x += x & -x)
                bit[x]++;
}

int get(int x)
{
        int ret = 0;
        for (; x; x -= x & -x)
                ret += bit[x];
        return ret;
}

int main()
{
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        freopen("help.in", "r", stdin);
        freopen("help.out", "w", stdout);
        pws[0] = 1ll;
        for (int i = 1; i < N; ++i)
                pws[i] = 2ll * pws[i - 1] % mod;

        cin >> n;
        for (int i = 0; i < n; ++i)
        {
                int x, y;
                cin >> x >> y;
                vec.push_back({x, y});
        }
        sort(vec.begin(), vec.end());
        ll ans = 0ll;
        for (int i = 0; i < n; ++i)
        {
                ll cnt = n - 1 - get(N - 1) + get(vec[i].first - 1);
                upd(vec[i].second);
                ans = add(ans, pws[cnt]);
        }
        cout << ans;
        return 0;
}

/*
        - bounds sir (segtree = 4N, eulerTour = 2N, ...)
        - a variable defined twice?
        - will overflow?
        - is it a good complexity?
        - don't mess up indices (0-indexed vs 1-indexed)
        - reset everything between testcases. 
*/
