#include <bits/stdc++.h>

#define I inline void
#define S struct
#define vi vector<int>
#define vii vector<pair<int, int>>
#define pii pair<int, int>
#define pll pair<ll, ll>

using namespace std;
using ll = long long;
using ld = long double;

const int N = 1e5 + 7, mod = 1e9 + 7;
const ll inf = 2e18;

// How interesting!

int n, k;
int j[N];
int dp[N][21][3];

int solve(int i, int f, int ls)
{
        if (i == n)
                return 0;
        int ret = 0;
        if (~dp[i][f][ls])
                return dp[i][f][ls];
        if (f)
        {
                for (int r = 0; r < 3; ++r)
                {
                        ret = max(ret, solve(i, f - 1, r));
                }
        }
        if (((ls + 1) % 3) == j[i])
                ret = max(ret, 1 + solve(i + 1, f, ls));
        ret = max(ret, solve(i + 1, f, ls));
        return dp[i][f][ls] = ret;
}

int main()
{
        memset(dp, -1, sizeof dp);
        freopen("hps.in", "r", stdin);
        freopen("hps.out", "w", stdout);
        cin >> n >> k;
        for (int i = 0; i < n; ++i)
        {
                char c;
                cin >> c;
                if (c == 'H')
                        j[i] = 0;
                else if (c == 'S')
                        j[i] = 1;
                else if (c == 'P')
                        j[i] = 2;
        }
        cout << max(
            solve(0, k, 0),
            max(solve(0, k, 1), solve(0, k, 2)));
        return 0;
}

/*
        - bounds sir (segtree = 4N, eulerTour = 2N, ...)
        - a variable defined twice?
        - will overflow?
        - is it a good complexity?
        - don't mess up indices (0-indexed vs 1-indexed)
        - reset everything between testcases. 
*/
