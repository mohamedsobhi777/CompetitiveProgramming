#include <bits/stdc++.h>

#define I inline void
#define S struct
#define vi vector<int>
#define vii vector<pair<int, int>>
#define pii pair<int, int>
#define pll pair<ll, ll>

using namespace std;
using ll = long long;
using ld = long double;

const int N = 2e5 + 7, mod = 1e9 + 7;
const ll inf = 2e18;

// How interesting!

int n;
ll accA[N];
int bit[N];

void add(int x)
{
        for (++x; x < N; x += x & -x)
                bit[x]++;
}

int get(int x)
{
        int ret = 0;
        for (++x; x; x -= x & -x)
                ret += bit[x];
        return ret;
}

int main()
{
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        freopen("haircut.in", "r", stdin);
        freopen("haircut.out", "w", stdout);
        cin >> n;
        for (int i = 0; i < n; ++i)
        {
                int x;
                cin >> x;
                accA[x + 1] += get(n) - get(x);
                add(x);
        }
        for (int i = 0; i < n; ++i)
        {
                if (i)
                        accA[i] += accA[i - 1];
                cout << accA[i] << "\n";
        }
        return 0;
}

/*
        - bounds sir (segtree = 4N, eulerTour = 2N, ...)
        - a variable defined twice?
        - will overflow?
        - is it a good complexity?
        - don't mess up indices (0-indexed vs 1-indexed)
        - reset everything between testcases. 
*/
