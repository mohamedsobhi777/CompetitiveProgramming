#include<bits/stdc++.h>


#pragma GCC optimize("-Ofast")
//#pragma GCC optimize("trapv")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,sse4.2,popcnt,abm,mmx,avx2,tune=native")
#pragma GCC optimize("-ffast-math")
#pragma GCC optimize("-funroll-loops")

#define I inline void 
#define S struct 
#define vi vector<int> 
#define vii vector<pair<int,int>>
#define pii pair<int,int>
#define pll pair<ll,ll>

using namespace std ; 
using ll = long long ; 
using ld = long double ; 

const int N = 1000 + 7 , mod = 1e9 + 7 ; 
const ll inf = 2e18 ; 

// How interesting!

int n, k; 
int a[N] ; 
int sum ; 
int cs[N] ; 

int solve(int x){
        if(sum - x * k / 2 < k / 2)return 0 ; 
        int ret = 0 ;
        int rem = k / 2;  
        memset(cs , 0 , sizeof cs) ; 
        int all = 0 ; 
        for(int i = 0 ; i < n ; ++ i){
                all += a[i] / x ; 
                cs[a[i]%x] ++ ; 
        }
        if(all < k / 2)return 0 ; 
        all = max(0 , all - k / 2) ; 
        all = min(all, k / 2) ; 
        ret = all * x ; 
        rem = max(0 , k / 2 - all ) ; 
        for(int i = x ; i; -- i){
                int mn = min(rem , cs[i]) ; 
                rem-= mn ; 
                ret += i * mn;   
        }
        return ret ; 
}

int main(){
        ios_base::sync_with_stdio(0) ;
        cin.tie(0) ; 
        //freopen("in.in" , "r" , stdin) ; 
        freopen("berries.in" , "r" , stdin) ; 
        freopen("berries.out" , "w" , stdout) ; 

        cin >> n >> k ;         

        for(int i = 0 ;i < n; ++ i){
                cin >> a[i] ; 
                sum += a[i] ;
        }
        int ans = 0 ; 
        for(int i = 1; i <= 1000 ; ++ i){
                ans = max(ans , solve(i)) ; 
        }
        cout<< ans ; 
        return 0 ; 
}

/*
        - bounds sir (segtree = 4N, eulerTour = 2N, ...)
        - a variable defined twice?
        - will overflow?
        - is it a good complexity?
        - don't mess up indices (0-indexed vs 1-indexed)
        - reset everything between testcases. 
*/
