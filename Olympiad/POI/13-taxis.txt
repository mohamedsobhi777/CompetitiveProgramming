#include <bits/stdc++.h>

#define I inline void
#define S struct
#define vi vector<int>
#define vii vector<pair<int, int>>
#define pii pair<int, int>
#define pll pair<ll, ll>

using namespace std;
using ll = long long;
using ld = long double;

const int N = 5e5 + 7, mod = 1e9 + 7;
const ll inf = 2e18;

// How interesting!

ll n, d, m;
ll a[N];
ll ans;
int main()
{
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        //freopen("in.in", "r", stdin);
        cin >> m >> d >> n;

        for (int i = 0; i < n; ++i)
                cin >> a[i];
        ll now = 0;

        sort(a, a + n, greater<ll>());
        bool ok = (d == m);
        ll x = 0;
        for (int i = n - 1; ~i; --i)
        {
                if (a[i] >= m - d && !ok)
                {
                        ok = 1;
                        x = a[i];
                        a[i] = 0;
                        break;
                }
        }
        for (int i = 0; i < n; ++i)
        {
                if (now == m)
                        break;
                if (now >= d && ok)
                {
                        ++ans;
                        now = m;
                        break;
                }

                if (abs(now - d) >= a[i])
                {
                        continue;
                }
                ++ans;
                a[i] -= abs(now - d);
                now = min(now + a[i], m);
        }
        if (abs(now - d) + abs(d - m) <= x && now < m && ok)
        {
                ++ans;
                now = m;
        }
        if (now < m)
                cout << 0;
        else
                cout << ans;
        return 0;
}

/*
        - bounds sir (segtree = 4N, eulerTour = 2N, ...)
        - a variable defined twice?
        - will overflow?
        - is it a good complexity?
        - don't mess up indices (0-indexed vs 1-indexed)
        - reset everything between testcases. 
*/
