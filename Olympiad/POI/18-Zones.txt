#include <bits/stdc++.h>

#pragma GCC optimize("-Ofast")
//#pragma GCC optimize("trapv")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,sse4.2,popcnt,abm,mmx,avx2,tune=native")
#pragma GCC optimize("-ffast-math")
#pragma GCC optimize("-funroll-loops")

#define I inline void
#define S struct
#define vi vector<int>
#define vii vector<pair<int, int>>
#define pii pair<int, int>
#define pll pair<ll, ll>

using namespace std;
using ll = long long;
using ld = long double;

const int N = 1e6 + 7, mod = 1e9 + 7;
const ll inf = 2e18;

// How interesting!

int n, m, t;
vector<pair<int, int>> adj[N];
int vis[N];
int st[N], mag[N];
string ans;
pair<int, int> ed[N];
int ret ; 

void dfs(int x)
{
        mag[x] = st[x] = ++t;
        for (auto u : adj[x])
        {
                if (vis[u.second])
                        continue;
                vis[u.second] = 1;
                ans[u.second] = (ed[u.second].first == x ? '>' : '<');
                if (st[u.first])
                {
                        mag[x] = min(mag[x] , st[u.first]) ; 
                }
                else
                {
                        dfs(u.first);
                        mag[x] = min(mag[x], mag[u.first]);
                }
                if(mag[u.first] > st[x])++ ret ;
        }
}

int main()
{
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        //freopen("in.in", "r", stdin);
        cin >> n >> m;
        ans.resize(m);
        for (int i = 0; i < m; ++i)
        {
                int u, v;
                cin >> u >> v;
                adj[u].push_back({v, i});
                adj[v].push_back({u, i});
                ed[i] = {u, v};
        }
        for (int i = 1; i <= n; ++i)
                if (!st[i])
                        dfs(i) , ++ ret ;
        cout<< ret <<"\n" ;
        cout << ans;
        return 0;
}

/*
        - bounds sir (segtree = 4N, eulerTour = 2N, ...)
        - a variable defined twice?
        - will overflow?
        - is it a good complexity?
        - don't mess up indices (0-indexed vs 1-indexed)
        - reset everything between testcases. 
*/
