/*

	Problem : POI 14-FarmCraft
	Link : https://szkopul.edu.pl/portal/problemset_eng/oi/21
	handle : mohamedsobhi777

	Solution : 
		https://www.youtube.com/watch?v=7hFWrKa6yRM
	

*/

#include<bits/stdc++.h>

#define I inline void 
using namespace std ; 

using ll = long long ; 
using lli = long long int ; 
using ld = long double ; 

const int N = 5e5 + 7 ; 
// How interesting!

int n ; 
int a[N] ; 
vector<int> adj[N] ; 
int dp[N] , sz[N] ; 

int dfz(int x , int p){
	int ret = 1; 
	for(auto u : adj[x]){
		if(u == p)
			continue ; 
		ret+= dfz(u , x) ; 
	}
	return sz[x] = ret ; 
}

int solve(int x , int p){


	int ret = a[x] ; 


	vector<pair<int,int> > dps ; 
	for(auto u : adj[x]){

		if(u == p)continue ; 

		solve(u , x) ; 

		dps.push_back({ 2 * sz[u] - dp[u] , u }) ; 
	}
	sort(dps.begin() , dps.end()) ; 
	int bk = 0 ;
	for(auto u : dps){
		ret = max(ret , 1  + dp[u.second] + bk ) ;
		bk += 2 * sz[u.second];
	}

	return dp[x] = ret ; 
}


int main(){
	ios_base::sync_with_stdio(0) ; 
	cin.tie(0) ;
	//freopen("in.in" , "r" , stdin) ; 

	cin >> n; 
	for(int i = 1;i <= n;i++){
		cin >> a[i] ; 
	}

	for(int i = 0 ;i < n - 1; i++){
		int u , v; 
		cin >> u >> v; 
		adj[u].push_back(v) ;
		adj[v].push_back(u) ;
	}
	dfz(1 , 1) ;
	cout<< max(2 * n - 2 + a[1] , solve(1 , 1) )  ; 

	return 0 ; 
}
